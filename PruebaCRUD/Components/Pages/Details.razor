@page "/students/details"
@inject IDbContextFactory<PruebaCRUD.Data.MyAppDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>


<div class="alert alert-success">
    <h1>Informacion General del Estudiante</h1>
</div>
<hr/>
<div>
    @if (student is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="card shadow-sm mb-5">
            <div class="card-body">
                <h5 class="card-title text-primary">@student.Nombres @student.Apellidos</h5>
                <h6 class="card-subtitle mb-2 text-muted">ID: @student.Id</h6>

                <div class="row">
                    <div class="col-md-6">
                        <p><strong>Fecha de nacimiento:</strong> @student.FechaNacimiento.ToShortDateString()</p>
                        <p><strong>Dirección:</strong> @student.Direccion</p>
                        <p><strong>Sexo:</strong> @student.Sexo</p>
                        <p><strong>CURP:</strong> @student.CURP</p>
                        <p><strong>Teléfono:</strong> @student.Telefono</p>
                        <p><strong>Descripción:</strong><br />@student.Descripcion</p>
                    </div>
                    <div class="col-md-6">
                        <p><strong>Email:</strong> @student.Email</p>
                        <p><strong>Carrera:</strong> @student.Carrera</p>
                        <p><strong>Modalidad:</strong> @student.Modalidad</p>
                        <p>
                            <strong>Es becado:</strong>
                            @if (student.EsBecado)
                            {
                                <span class="badge bg-success">Sí</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">No</span>
                            }
                        </p>
                        <p><strong>Horario de comida:</strong> @student.HorarioComida</p>
                    </div>
                </div>

                

                <p>
                    <strong>Mascotas:</strong>
                    @if (student.TieneMascotas)
                    {
                        @student.Mascotas
                    }
                    else
                    {
                        <span class="text-muted">No tiene</span>
                    }
                </p>

                <div class="mt-4">
                    <a href="@($"/students/edit?id={student.Id}")" class="btn btn-primary me-2">Editar</a>
                    <a href="/students" class="btn btn-outline-secondary">Volver</a>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private Student? student;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        student = await context.Student.FirstOrDefaultAsync(m => m.Id == Id);

        if (student is null)
        {
            NavigationManager.NavigateTo("/students");
        }
    }
}
